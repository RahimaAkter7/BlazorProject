// <auto-generated />
using System;
using MasterDetail.Server.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MasterDetail.Server.Migrations
{
    [DbContext(typeof(FlowerDbContext))]
    partial class FlowerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MasterDetail.Shared.BouquetType", b =>
                {
                    b.Property<int>("BouquetTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BouquetTypeId"), 1L, 1);

                    b.Property<string>("BouquetTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BouquetTypeId");

                    b.ToTable("BouquetTypes");
                });

            modelBuilder.Entity("MasterDetail.Shared.Flower", b =>
                {
                    b.Property<int>("FlowerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlowerId"), 1L, 1);

                    b.Property<string>("FlowerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<bool>("StoreAvaible")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StoreDate")
                        .HasColumnType("datetime2");

                    b.HasKey("FlowerId");

                    b.ToTable("Flowers");
                });

            modelBuilder.Entity("MasterDetail.Shared.StoreEntry", b =>
                {
                    b.Property<int>("StoreEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoreEntryId"), 1L, 1);

                    b.Property<int>("BouquetTypeId")
                        .HasColumnType("int");

                    b.Property<int>("FlowerId")
                        .HasColumnType("int");

                    b.HasKey("StoreEntryId");

                    b.HasIndex("BouquetTypeId");

                    b.HasIndex("FlowerId");

                    b.ToTable("StoreEntries");
                });

            modelBuilder.Entity("MasterDetail.Shared.StoreEntry", b =>
                {
                    b.HasOne("MasterDetail.Shared.BouquetType", "BouquetType")
                        .WithMany("StoreEntries")
                        .HasForeignKey("BouquetTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterDetail.Shared.Flower", "Flower")
                        .WithMany("StoreEntries")
                        .HasForeignKey("FlowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BouquetType");

                    b.Navigation("Flower");
                });

            modelBuilder.Entity("MasterDetail.Shared.BouquetType", b =>
                {
                    b.Navigation("StoreEntries");
                });

            modelBuilder.Entity("MasterDetail.Shared.Flower", b =>
                {
                    b.Navigation("StoreEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
