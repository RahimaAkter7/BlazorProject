@using MasterDetail.Shared;

<EditForm Model="flower" OnValidSubmit="OnValidSubmit" enctype="multipart/form-data">
    <div class="row">
        <div class="col-6 ">
            <input type="hidden" @bind="@flower.FlowerId" />
            <div class="form-group mb-2">
                <label for="name">Name</label>
                <div>
                    <InputText class="form-control" id="name" @bind-Value="@flower.FlowerName" />
                </div>
            </div>

            <div class="form-group mb-2">
                <label for="name"> Store Date</label>
                <div>
                    <InputDate class="form-control" id="name" @bind-Value="@flower.StoreDate" />
                </div>
            </div>

            <div class="form-group mb-2">
                <label for="name">Quantity </label>
                <div>
                    <InputNumber class="form-control" id="name" @bind-Value="@flower.Quantity" />
                </div>
            </div>

            <div class="form-group mb-2">
                <label for="name">Picture</label>
                <div>
                    <InputFile class="form-control" OnChange="HandleFileSelection" />

                </div>
            </div>

            <div class="form-check">
                <InputCheckbox class="form-check-input" name="maritalStatus" id="maritalStatus" @bind-Value="flower.StoreAvaible" />
                <label class="form-check-label" for="storeAvaible">
                    StoreAvailable
                </label>
            </div>

        </div>

        <div class="col-6" style="width:100;">
            <h2>Select BouquetType</h2>
            <div class="d-flex justify-content-end">
                <button type="button" @onclick="( ()=> flower.BouquetTypeList.Add(new BouquetType()))" class="btn btn-primary btn-sm col-md-2">Add More</button>
            </div>

            <div class="spotContainer">
                @for (int i = 0; i < flower.BouquetTypeList.Count; i++)
                {
                    int index = i;
                    BouquetType bouquetType = flower.BouquetTypeList[index];

                    <div class="row form-group mt-2">
                        <div class="col-md-10">
                            <InputSelect @bind-Value="flower.BouquetTypeList[index].BouquetTypeId" class="form-control">
                                <option value="" selected>---Select---</option>
                                @foreach (var type in bouquetTypes)
                                {
                                    <option value="@type.BouquetTypeId">@type.BouquetTypeName</option>
                                }
                            </InputSelect>
                        </div>

                        <div class="col-md-2">
                            <button type="button" @onclick="@(() => flower.BouquetTypeList.RemoveAt(index))" class="btn btn-danger btn-sm">Remove</button>
                        </div>
                    </div>

                }
            </div>

        </div>
    </div>

    <div class="row mt-2">
        <div class="col">
            <button type="submit" class="btn btn-primary btn-sm shadow">Submit</button>
        </div>        
    </div>



</EditForm>

@code {
    [Parameter] public FlowerVM? flower { get; set; }
    [Parameter] public List<BouquetType>? bouquetTypes { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    [Parameter] public EventCallback<IBrowserFile> SelectedFileChanged { get; set; }

    public IBrowserFile selectedFile { get; set; }


    public async Task HandleFileSelection(InputFileChangeEventArgs e)
    {
        if (e.File is not null)
        {
            selectedFile = e.File;
            await SelectedFileChanged.InvokeAsync(selectedFile);
        }
    }
}
